#include <bits/stdc++.h>
using namespace std;
#define INF 2147483647
#define INFF 9223372036854775807
#define ll long long
#define REP(i,n) for(int i=0;i<n;i++)
#define REPP(i,m,n) for(int i=m;i<n;i++)
#define ALL(N) (N.begin(),N.end())
#define de cout << "debug" << endl;
template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }


int par[1000000];

int root(int x){//根に当たるまで再帰で探す
    if(par[x] == x) return x;
    return par[x] = root(par[x]);
}

bool same(int x,int y){//つながっているかどうか判定
    return par[x] == par[y];
}

void unite(int x, int y){//根が同じでなかったらつなげる
    x = root(x), y = root(y);
    if(x == y) return;
    par[x] = y;
}

int main() {
    cin.tie(0);
	ios::sync_with_stdio(false);

    int N,A[100010],B[100010],W[100010];
    cin >> N;
    REP(i,N) par[i] = i;//はじめに全てが根であるとしておく
    REP(i,N){
        cin >> A[i] >> B[i] >> W[i];
    }

    REP(i,N){

        unite(A[i],B[i],W[i]);


        else{
            root(A),root(B);
            if(same(A,B))cout << "Yes" << endl;
            else cout << "No" << endl;
        }
    }
}
