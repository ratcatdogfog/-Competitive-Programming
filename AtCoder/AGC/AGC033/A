#include <bits/stdc++.h>
using namespace std;
#define INF 2147483647
#define INFF 9223372036854775807
#define ll long long
#define REP(i,n) for(int i=0;i<n;i++)
#define REPP(i,m,n) for(int i=m;i<n;i++)
#define ALL(N) (N.begin(),N.end())
#define de cout << "debug" << endl;
#define push_back pb
template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }


int main() {
    cin.tie(0);    
	ios::sync_with_stdio(false);
    int H,M;
    cin >> H >> M;
    int D[1010][1010];
    char A[H][M];
    queue<pair<int,int>> Q;
    REP(i,H){
      REP(j,M){
        cin >> A[i][j];
        if(A[i][j] == '#'){
          Q.push(make_pair(i,j));
        }
      }
    }
    
    int a = 0;  //dの値を外に持っていくために作った
    while(!Q.empty()){
        int x = Q.front().first, y = Q.front().second;
        Q.pop();
        int d = D[x][y];
        a = d;
        int dx[4] = {0,1,0,-1};  //xの動く向き
        int dy[4] = {1,0,-1,0};  //yの動く向き（xと連動している）
        REP(i,4){
            int px = x + dx[i];
            int py = y + dy[i];
            //盤外に行った場合はcontinue
            if(px < 0 || px >= H || py < 0 || py >= M) continue;
            if(A[px][py] == '.'){
                Q.push(make_pair(px,py));  //26,27行目同様＃の時queueにpush
                A[px][py] = '#';  //白から黒へと色を変える
                D[px][py] = d+1;  //一つずれるので距離を＋１
            }
        }
    }
    cout << a << endl;
}
